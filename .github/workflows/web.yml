name: Web CD

on:
  push:
    branches: ["master", "dev", "wasmJS", "web"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: 17
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: false
          cache-overwrite-existing: true
      - name: "Build WasmJS App"
        id: build
        continue-on-error: true
        run: gradle app:web:build
      - name: "WasmJS App Distribution"
        id: dist
        continue-on-error: true
        run: gradle app:web:wasmJsBrowserDistribution
      - name: Setup Pages
        if: ${{ steps.build.outcome != 'failure' || steps.dist.outcome != 'failure' }}
        uses: actions/configure-pages@v5
      - name: Upload artifact
        if: ${{ steps.build.outcome != 'failure' || steps.dist.outcome != 'failure' }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./app/web/build/dist/wasmJs/productionExecutable

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
