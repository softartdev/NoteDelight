name: Kotlin Multiplatform CI

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
  pull_request:

jobs:
  build_job:
    name: Build (Unit-tests & Android-Lint)
    runs-on: macos-latest
    continue-on-error: true
    steps:
      - name: Check out
        uses: actions/checkout@v4
      - name: Gradle Wrapper Validation
        uses: gradle/actions/wrapper-validation@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: 17
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: false
          cache-overwrite-existing: true
      - name: Build (first attempt)
        id: build
        continue-on-error: true
        run: ./gradlew build
      - name: Build (retry on failure)
        if: ${{ steps.build.outcome == 'failure' }}
        run: ./gradlew build
      - name: Archive build-output artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: output-build-artifacts
          path: |
            shared/build/reports
            android-compose-app/build/reports

  android_ui_test_job:
    name: Android UI-tests on emulator
    needs: build_job
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        api-level: [ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 ]
        target: [default]
    steps:
      - name: Check out
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: 17
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: false
          cache-overwrite-existing: true
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}-${{ matrix.target }}
      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: x86_64
          profile: Nexus 6
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."
      - name: Run UI-tests on emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: x86_64
          profile: Nexus 6
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew :android-compose-app:connectedCheck
      - name: Archive ui-tests-output artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: output-ui-tests-artifacts-${{ matrix.api-level }}-${{ matrix.target }}
          path: |
            android-compose-app/build/outputs
            android-compose-app/build/reports